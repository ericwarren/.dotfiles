#!/bin/bash
# Claude Code + .NET Development tmux session script
# 3-pane layout: Neovim (65%) | Claude Code + dotnet watch (35% split vertically)
# Save as ~/.local/bin/dotnet-session and make executable: chmod +x ~/.local/bin/dotnet-session
# Usage: dotnet-session [project-name]

PROJECT_NAME=${1:-dotnet-dev}
SESSION_NAME="$PROJECT_NAME"

# Check if session already exists
if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "Session $SESSION_NAME already exists. Attaching..."
    tmux attach-session -t "$SESSION_NAME"
    exit 0
fi

echo "Creating new .NET + Claude Code development session: $SESSION_NAME"

# Find project directory (look for .csproj or .sln files in CURRENT directory first)
PROJECT_DIR="$PWD"

# First check current directory for .NET project files
if [ -n "$(find . -maxdepth 1 -name "*.csproj" -o -name "*.sln" 2>/dev/null | head -1)" ]; then
    PROJECT_DIR="$PWD"
    echo "Found .NET project in current directory: $PROJECT_DIR"
# Then check one level down
elif [ -n "$(find . -maxdepth 2 -name "*.csproj" -o -name "*.sln" 2>/dev/null | head -1)" ]; then
    PROJECT_DIR="$PWD"
    echo "Found .NET project in subdirectory of: $PROJECT_DIR"
# If a specific directory is provided as argument
elif [ -n "$1" ] && [ -d "$1" ]; then
    PROJECT_DIR="$(realpath "$1")"
    cd "$PROJECT_DIR"
    echo "Using specified directory: $PROJECT_DIR"
else
    # Default to current directory
    PROJECT_DIR="$PWD"
    echo "No .NET project found, using current directory: $PROJECT_DIR"
fi

echo "Using project directory: $PROJECT_DIR"

# Create new session with main window
tmux new-session -d -s "$SESSION_NAME" -c "$PROJECT_DIR"

# Window 1: Main Development (3-pane layout)
tmux rename-window -t "$SESSION_NAME:1" "dev"

# Create the 3-pane layout
echo "Creating 3-pane development layout..."

# First, split vertically to create left and right sections
# -h means horizontal split (creates left|right panes)
tmux split-window -h -p 30 -c "$PROJECT_DIR" -t "$SESSION_NAME:1"

# Now we have:
# Pane 1 (left, 65%): Will be Neovim
# Pane 2 (right, 35%): Will be split again

# Split the right pane horizontally to create top and bottom sections
# -v means vertical split (creates top/bottom panes)
tmux split-window -v -p 25 -c "$PROJECT_DIR" -t "$SESSION_NAME:1.2"

# Now we should have:
# Pane 1 (left, 65%): Neovim
# Pane 2 (top-right, 75% of right): Claude Code
# Pane 3 (bottom-right, 25% of right): dotnet watch

# Verify layout
PANE_COUNT=$(tmux list-panes -t "$SESSION_NAME:1" | wc -l)
if [ "$PANE_COUNT" -ne 3 ]; then
    echo "⚠️  Layout creation issue. Got $PANE_COUNT panes, expected 3"
fi

# Set up panes one at a time
# Pane 1: Neovim - DON'T START IT YET
tmux select-pane -t "$SESSION_NAME:1.1" -T "neovim"
tmux send-keys -t "$SESSION_NAME:1.1" "cd '$PROJECT_DIR'" Enter
# Leave nvim command ready but don't execute it
tmux send-keys -t "$SESSION_NAME:1.1" "nvim ."

# Pane 2: Claude Code
tmux select-pane -t "$SESSION_NAME:1.2" -T "claude-code"
tmux send-keys -t "$SESSION_NAME:1.2" "clear" Enter

# Pane 3: dotnet watch
tmux select-pane -t "$SESSION_NAME:1.3" -T "dotnet-watch"
tmux send-keys -t "$SESSION_NAME:1.3" "clear" Enter

# Window 2: Git & Version Control
tmux new-window -t "$SESSION_NAME" -n "git" -c "$PROJECT_DIR"
tmux send-keys -t "$SESSION_NAME:git" "git status" Enter

# Window 3: .NET Commands & Package Management
tmux new-window -t "$SESSION_NAME" -n "dotnet" -c "$PROJECT_DIR"

# Window 4: General Terminal
tmux new-window -t "$SESSION_NAME" -n "term" -c "$PROJECT_DIR"

# Configure session settings
# Show pane titles
tmux set-option -t "$SESSION_NAME" pane-border-status top
tmux set-option -t "$SESSION_NAME" pane-border-format "#{?pane_active,#[fg=brightblue],#[fg=white]}#{pane_title}"

# Set pane borders to be more visible
tmux set-option -t "$SESSION_NAME" pane-active-border-style "fg=blue,bold"
tmux set-option -t "$SESSION_NAME" pane-border-style "fg=white"

# Set status bar to show current window more clearly
tmux set-option -t "$SESSION_NAME" status-style "bg=black,fg=white"
tmux set-option -t "$SESSION_NAME" window-status-current-style "bg=blue,fg=white,bold"

# Focus on development window and Neovim pane
tmux select-window -t "$SESSION_NAME:dev"
tmux select-pane -t "$SESSION_NAME:dev.1"

# Session info - THIS IS WHAT THE USER ACTUALLY SEES
echo ""
echo "🎯 Session '$SESSION_NAME' created successfully!"
echo ""
echo "📋 Layout Overview:"
echo "  ┌─────────────────┬─────────────────┐"
echo "  │                 │                 │"
echo "  │                 │   Claude Code   │"
echo "  │     Neovim      │   Terminal      │"
echo "  │      (65%)      ├─────────────────┤"
echo "  │                 │  dotnet watch   │"
echo "  │                 │    output       │"
echo "  └─────────────────┴─────────────────┘"
echo ""
echo "🪟 Windows:"
echo "  1. dev:    Main development (3 panes as shown above)"
echo "  2. git:    Git operations and version control"
echo "  3. dotnet: Manual .NET commands and EF tools"
echo "  4. term:   General terminal for misc tasks"
echo ""
echo "🤖 Claude Code Usage:"
echo "  cc \"add tests for UserService\""
echo "  cc \"refactor this method\""
echo "  cc \"fix the validation errors\""
echo ""
echo "⌨️  Key bindings in Neovim:"
echo "  <leader>dw  - Start dotnet watch run (→ bottom right pane)"
echo "  <leader>dr  - Run project (→ popup)"
echo "  <leader>db  - Build project (→ popup)"
echo "  <leader>dt  - Test project (→ popup)"
echo "  <leader>ds  - Stop watch"
echo "  <F8>        - Quick watch run"
echo "  <F5>        - Quick run"
echo ""
echo "🔧 tmux shortcuts:"
echo "  Ctrl+a + h/j/k/l  Navigate panes (vim-style)"
echo "  Ctrl+a + 1/2/3/4  Switch windows"
echo "  Ctrl+a + z        Zoom current pane"
echo ""
echo "⚠️  NOTE: Press Enter in the left pane to start Neovim"
echo ""
echo "🚀 Attaching to session..."

# Small delay to let user read the info
sleep 2

# Attach to session
tmux attach-session -t "$SESSION_NAME"
