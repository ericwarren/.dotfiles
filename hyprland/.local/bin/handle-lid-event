#!/bin/bash
# Lid event handler for Hyprland - handles both close and open events

LOG_FILE="$HOME/.local/share/lid-events.log"
LOCK_SCRIPT="$HOME/.local/bin/blur-lock"
SAFE_SUSPEND="$HOME/.local/bin/safe-suspend"

# Create log directory
mkdir -p "$(dirname "$LOG_FILE")"

# Get lid state
LID_STATE=$(cat /proc/acpi/button/lid/LID*/state 2>/dev/null | head -1 | awk '{print $2}' || echo "unknown")

# Set Hyprland socket if not set
if [ -z "$HYPRLAND_INSTANCE_SIGNATURE" ]; then
    HYPRLAND_INSTANCE_SIGNATURE=$(ls -la /tmp/hypr 2>/dev/null | grep "$USER" | head -1 | awk '{print $9}' || echo "")
    export HYPRLAND_INSTANCE_SIGNATURE
fi

echo "$(date): Lid event - State: $LID_STATE" >> "$LOG_FILE"

case "$LID_STATE" in
    "closed")
        echo "$(date): Lid closed - checking for external monitors..." >> "$LOG_FILE"

        # Check for external monitors using hyprctl
        external_monitors=0
        if command -v hyprctl >/dev/null 2>&1; then
            external_monitors=$(hyprctl monitors -j 2>/dev/null | jq '[.[] | select(.name != "eDP-1")] | length' 2>/dev/null || echo "0")
        fi

        echo "$(date): External monitors detected: $external_monitors" >> "$LOG_FILE"

        if [ "$external_monitors" -gt 0 ]; then
            # External monitor connected - turn off laptop screen and lock
            echo "$(date): External monitor present - turning off laptop screen and locking" >> "$LOG_FILE"
            hyprctl dispatch dpms off eDP-1 2>/dev/null || true
            "$LOCK_SCRIPT" &
        else
            # No external monitor - lock and suspend
            echo "$(date): No external monitor - locking and suspending" >> "$LOG_FILE"
            "$SAFE_SUSPEND" &
        fi
        ;;
    "open")
        echo "$(date): Lid opened - turning laptop screen back on" >> "$LOG_FILE"
        # Turn laptop screen back on
        hyprctl dispatch dpms on eDP-1 2>/dev/null || true

        # Optional: refresh waybar in case it got stuck
        pkill -SIGUSR1 waybar 2>/dev/null || true
        ;;
    *)
        echo "$(date): Unknown lid state: $LID_STATE" >> "$LOG_FILE"
        ;;
esac
